# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - MDE-Client

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install Coverlet
        run: dotnet tool install --global coverlet.console

      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore dependencies
        run: dotnet restore

      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /k:"Encrypt0n_MDE-Client" \
            /o:"encrypt0n" \
            /d:sonar.login="1f247618fa45e45fc923d483cb5777bdcb55e84c" \
            /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.opencover.xml" \
            /d:sonar.verbose=true \
            /d:sonar.projectBaseDir="$(pwd)/.."  # adjust if needed

      - name: Build with dotnet
        run: dotnet build --no-incremental

      - name: Install Playwright Browsers
        run: playwright install


      - name: Run tests with coverage
        run: |
          coverlet ./MDE_Client.Tests/bin/Debug/net8.0/MDE_Client.Tests.dll \
            --target "dotnet" \
            --targetargs "test --no-build --no-restore" \
            --format opencover \
            --output ./TestResults/coverage.opencover.xml

      - name: End SonarCloud analysis
        run: dotnet sonarscanner end /d:sonar.login="1f247618fa45e45fc923d483cb5777bdcb55e84c"

      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_9E2E75BEB9D2477D8528240DA443DB6D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A28100CA47F449F3A0D2DF8A87D43BEE }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DF629BCAF81C4081AE30B6A54BA48507 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MDE-Client'
          slot-name: 'Production'
          package: .
          
